name: Rudra CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-docker
      - name: Run tests
        run: pytest test/ -v
        continue-on-error: true

  build-and-push:
    # Only run this job if tests pass AND it's a push to main OR a release event
    needs: test
    # Condition: Triggered by push to main branch OR a published release event
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'release' && github.event.action == 'published')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed for pushing to Docker Hub potentially / GitHub Packages

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_TOKEN }}    

      # --- Metadata for Docker tags and labels ---
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: bruhat15/rudra-app 
          tags: |
            # tag latest on push to main
            type=branch,event=push,enable=${{ github.ref == 'refs/heads/main' }}
            # tag with git sha on push to main
            type=sha,prefix=,event=push,enable=${{ github.ref == 'refs/heads/main' }},suffix=-{{date 'YYYYMMDD'}}
            # tag with release version (e.g., v1.0.0) when a release is published
            type=ref,event=release

      # --- Build and push image ---
      - name: Build and push Docker image
        uses: docker/build-push-action@v5 # Updated version
        with:
          context: . # Build from the root directory
          push: true # Actually push the image
          tags: ${{ steps.meta.outputs.tags }} # Use tags generated by metadata-action
          labels: ${{ steps.meta.outputs.labels }} # Add useful labels
          cache-from: type=gha # Enable build cache from GitHub Actions
          cache-to: type=gha,mode=max


  security-scan:
    needs: build-and-push
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'adityamaller/rudra:latest'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  deploy:
    needs: [build-and-push, security-scan]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: echo "Deploying ${{ github.event.release.tag_name }}"
