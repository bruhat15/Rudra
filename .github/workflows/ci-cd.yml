# .github/workflows/ci_cd_pipeline.yml

name: Rudra CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ] # Trigger ONLY when published
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Test on multiple supported Python versions
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5 # Use v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest # Install only pytest if pytest-docker isn't used

      - name: Run tests
        run: pytest test/ -v
        # REMOVED: continue-on-error: true - Fail pipeline if tests fail

  build-and-push:
    needs: test # Depends on tests passing
    # Condition: Triggered by push to main branch OR a published release event
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'release' && github.event.action == 'published')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Should be bruhat15 via secrets
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: bruhat15/rudra-app # Correct username/repo
          tags: |
            type=branch,event=push,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,prefix=,event=push,enable=${{ github.ref == 'refs/heads/main' }},suffix=-{{date 'YYYYMMDD'}}
            type=ref,event=release

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security-scan:
    needs: build-and-push
    if: needs.build-and-push.result == 'success' # Only run if build was successful
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write # To upload results
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Use v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master # Or pin to a specific version like @0.18.0
        with:
          image-ref: 'bruhat15/rudra-app:latest' # Correct username/repo
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH' # Define severity threshold
          # Recommended: Make job fail on findings
          # exit-code: '1'
          # ignore-unfixed: true # Optional: only fail if fix exists

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure() # Upload report even if scan found issues
        with:
          sarif_file: 'trivy-results.sarif'

  deploy:
    needs: [build-and-push, security-scan]
    # Corrected 'if' condition
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy (Placeholder)
        run: |
          echo "Deploying release: ${{ github.event.release.tag_name }}"
          echo "Using image: bruhat15/rudra-app:${{ github.event.release.tag_name }}"
          # Add actual deployment steps here
